# Copyright (c) 2024-2025 Hemi Labs, Inc.
# Use of this source code is governed by the MIT License,
# which can be found in the LICENSE file.

# GitHub Actions workflow to lint and test.
name: "Go"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  workflow_call:

concurrency:
  group: "go-${{ github.workflow }}-${{ github.event.number || github.ref }}"
  cancel-in-progress: "${{ github.event_name == 'pull_request' }}"

env:
  GO_VERSION: "1.25.x"

permissions:
  contents: read

jobs:
  lint:
      name: "Lint"
      runs-on: "ubuntu-latest"
      steps:
        - name: "Checkout repository"
          uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

        - name: "Setup Go ${{ env.GO_VERSION }}"
          uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
          with:
            go-version: "${{ env.GO_VERSION }}"
            cache: true

        - name: "golangci-lint"
          uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
          with:
            version: "v2.5"

        - name: "golangci-lint fmt"
          run: golangci-lint fmt --diff ./...

  test:
    name: "Test"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: "Setup Go ${{ env.GO_VERSION }}"
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version: "${{ env.GO_VERSION }}"
          cache: true
          check-latest: true

      - name: "make test"
        run: make GOCACHE="$(go env GOCACHE)" test

  test-race:
    name: "Test (race)"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: "Setup Go ${{ env.GO_VERSION }}"
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version: "${{ env.GO_VERSION }}"
          cache: true
          check-latest: true

      - name: "make race"
        run: make GOCACHE="$(go env GOCACHE)" race
